const yearPattern = /^\d{4}$/;
const ruFilmPattern = /[а-яё\s.,!'"+:?—-]+/i;
const enFilmPattern = /[a-z\s.,!'"+:?—-]+/i;

const urlPattern =
  /^https?:\/\/(?<domain>[-a-zA-Z0-9@:%._+~#=]{2,256}\.[a-z]{2,3})\/(?<path>.*)$/;
// ^https?: Строка должна начинаться с http:// или https://. s? означает, что "s" может быть, а может и не быть.
// :\/\/: Следует за "http://" или "https://".
// (?<domain>[-a-zA-Z0-9@:%._+~#=]{2,256}\.[a-z]{2,3}): Группирующая скобка с именем "domain", которая сопоставляет доменное имя (например, "example.com"). Этот фрагмент позволяет использовать результат сопоставления по имени "domain" в коде.
// [-a-zA-Z0-9@:%._+~#=]{2,256}: Это выражение сопоставляет символы, которые могут встречаться в доменных именах. Они включают буквы, цифры, дефисы, символы "@" и др. Максимальная длина доменного имени - 256 символов.
// \.[a-z]{2,3}: Доменное имя должно заканчиваться доменным уровнем верхнего уровня (TLD), например, ".com" или ".org". {2,3} указывает, что TLD может содержать от 2 до 3 букв.
// \/: Слэш после доменного имени, обозначающий конец доменной части URL.
// (?<path>.*)$: Группирующая скобка с именем "path", которая сопоставляет остаток URL, включая путь и параметры.
// .*: Это сопоставление всех символов после слэша в URL.
// $: Конец строки URL.
const strongPasswordPattern =
  /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[!@#$%^&*()\-_+=])[A-Za-z\d!@#$%^&*()\-_+=]{8,}$/;
// Должен содержать хотя бы одну строчную (a-z) букву.
// Должен содержать хотя бы одну заглавную (A-Z) букву.
// Должен содержать хотя бы одну цифру (0-9).
// Должен содержать хотя бы один специальный символ из набора: !@#$%^&*()-_+=.
// Все символы, включая специальные символы, допустимы в строке. Длина строки должна быть не менее 8 символов

module.exports = {
  yearPattern,
  ruFilmPattern,
  enFilmPattern,
  urlPattern,
  strongPasswordPattern,
};
